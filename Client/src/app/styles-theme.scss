// Angular Material Theme info only
// Use styles.scss for main site styles

@use "@angular/material" as mat;
@use "@ng-matero/extensions" as mtx;
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();
// ref: https://www.materialpalette.com

// Define a dark theme
$dark-primary: mat.define-palette(mat.$grey-palette, 900);
$dark-accent: mat.define-palette(mat.$blue-gray-palette, 900);
$dark-warn: mat.define-palette(mat.$deep-orange-palette, 900);
$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $dark-primary,
      accent: $dark-accent,
      warn: $dark-warn,
    ),
  )
);

// Define a light theme
$light-primary: mat.define-palette(mat.$grey-palette);
$light-accent: mat.define-palette(mat.$blue-gray-palette);
$light-warn: mat.define-palette(mat.$deep-orange-palette);
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $light-primary,
      accent: $light-accent,
      warn: $light-warn,
    ),
  )
);

// Apply the dark theme by default
@include mat.legacy-core-theme($dark-theme);
@include mat.all-legacy-component-themes($dark-theme);

// angular extensions theming
@include mtx.all-component-themes($dark-theme);

// standard dark colors
$color-primary: mat.get-color-from-palette($dark-primary, 900);
$color-accent: mat.get-color-from-palette($dark-accent, 900);
$color-warn: mat.get-color-from-palette($dark-warn, 900);

// light colors
$color-primary-light: mat.get-color-from-palette($dark-primary, "lighter");
$color-accent-light: mat.get-color-from-palette($dark-accent, "lighter");
$color-warn-light: mat.get-color-from-palette($dark-warn, "lighter");

// other colors
$color-primary-500: mat.get-color-from-palette($dark-primary, 500);
$color-primary-700: mat.get-color-from-palette($dark-primary, 700);
$color-primary-800T: mat.get-color-from-palette($dark-primary, 800, 0.2);

$color-accent-800: mat.get-color-from-palette($dark-accent, 800);

.dark-theme {
  color: $color-primary-500;
  background-color: $color-primary !important;
  min-height: 100vh;
}

// Apply the light theme only when the `.light-theme` CSS class is applied
// to an ancestor element of the components (such as `body`).
.light-theme {
  @include mat.all-legacy-component-colors($light-theme);

  // standard light colors
  $color-primary: mat.get-color-from-palette($light-primary, 900);
  $color-accent: mat.get-color-from-palette($light-accent, 900);
  $color-warn: mat.get-color-from-palette($light-warn, 900);

  background-color: "white" !important;
  min-height: 100vh;
}
